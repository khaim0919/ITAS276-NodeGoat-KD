name: CI
'on':
  - push
  - pull_request


jobs:
  # Post a message to the ITAS Discord channel with pipeline updates.
  discord-begin:
    runs-on: ubuntu-latest
    steps:
    - name: Discord Notification start
      uses: tsickert/discord-webhook@v5.3.0
      with:
        webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
        username: GIR ${{github.repository}}
        avatar-url: https://static.wikia.nocookie.net/zimwiki/images/4/4f/Duty_duty_duty_duty_duuuu.png/
        embed-title: "Starting Security Pipeline jobs for \"${{github.event.head_commit.message}}\""
        embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        embed-description: "[Action details ${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})\n"
        embed-author-name: "${{ github.triggering_actor }}"
        thread-id: "1226941088137478236"


  # Lint through code that is published
  lint:
    name: Node.js
    runs-on: ubuntu-latest
    needs: discord-begin

    strategy:
      fail-fast: false
      matrix:
        node-version:
          - 14.x
    steps:
      - name: 'Checkout https://github.com/${{ github.repository }}@${{ github.ref }}'
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: 'Set up Node.js ${{ matrix.node-version }}'
        uses: actions/setup-node@v1
        with:
          node-version: '${{ matrix.node-version }}'
      - name: Run linter
        run: npx --no-install jshint@2.12.0 .

  # Post a message to the ITAS Discord channel with pipeline updates.
  discord-lint:
    runs-on: ubuntu-latest
    needs: lint
    # Make sure this runs after to document the jobs completion
    if: always()

    steps:
    - name: Discord Notification start
      uses: tsickert/discord-webhook@v5.3.0
      with:
        webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
        username: GIR ${{github.repository}}
        avatar-url: https://static.wikia.nocookie.net/zimwiki/images/4/4f/Duty_duty_duty_duty_duuuu.png/
        embed-title: "Linting complete for \"${{github.event.head_commit.message}}\""
        embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        embed-description: |
          Job was ${{ job.status == 'failed' && 'not' || '' }} completed successfully.
          [Action details ${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
        embed-author-name: "${{ github.triggering_actor }}"
        thread-id: "1226941088137478236"


  # Use semgrep on the new push
  semgrep:
    name: semgrep/ci
    runs-on: ubuntu-latest
    needs: lint

    container:
      image: semgrep/semgrep
    if: '(github.actor != ''dependabot[bot]'')'
    steps:
      - uses: actions/checkout@v3
      - name: semgrep scan
        id: semgrep_scan
        run: |
          semgrep \
          --sarif --output semgrep-sast.sarif \
          --metrics=off \
          --config="p/default"
      - uses: actions/upload-artifact@v4
        with:
          name: semgrep-sast.sarif
          path: semgrep-sast.sarif
      
      - name: Save SARIF artifact ID
        run: echo "::set-output name=sarif_id::${{ steps.semgrep_scan.outputs.artifact_id }}"

  # Post a message to the ITAS Discord channel with pipeline updates.
  discord-semgrep:
    runs-on: ubuntu-latest
    needs: semgrep
    # Make sure this runs after to document the jobs completion
    if: always()

    steps:
    - name: Discord Notification start
      uses: tsickert/discord-webhook@v5.3.0
      with:
        webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
        username: GIR ${{github.repository}}
        avatar-url: https://static.wikia.nocookie.net/zimwiki/images/4/4f/Duty_duty_duty_duty_duuuu.png/
        embed-title: "Semgrep complete for \"${{github.event.head_commit.message}}\""
        embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        embed-description: |
          Job was ${{ job.status == 'failed' && 'not' || '' }} completed successfully.
          [Action details ${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          [Download Sarif File](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/${{ needs.semgrep.outputs.sarif_id }})
        embed-author-name: "${{ github.triggering_actor }}"
        thread-id: "1226941088137478236"


  # Use snyk on the new push
  snyk:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v2
      - name: Build a Docker image
        run: 'docker build -t khaim0919/itas-276-assignment01:recent .'
      - name: Run Snyk to check Docker image for vulnerabilities
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: '${{ secrets.SNYK_TOKEN }}'
        with:
          image: 'khaim0919/itas-276-assignment01:recent'
      - uses: actions/upload-artifact@v4
        with:
          name: snyk.sarif
          path: snyk.sarif

  # Post a message to the ITAS Discord channel with pipeline updates.
  discord-snyk:
    runs-on: ubuntu-latest
    needs: snyk
    # Make sure this runs after to document the jobs completion
    if: always()

    steps:
    - name: Discord Notification start
      uses: tsickert/discord-webhook@v5.3.0
      with:
        webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
        username: GIR ${{github.repository}}
        avatar-url: https://static.wikia.nocookie.net/zimwiki/images/4/4f/Duty_duty_duty_duty_duuuu.png/
        embed-title: "Snyk complete for \"${{github.event.head_commit.message}}\""
        embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        embed-description: |
          Job was ${{ needs.snyk.result == 'failure' && 'not' || '' }} completed successfully. ${{needs.snyk.result}}
          [Action details ${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
        embed-author-name: "${{ github.triggering_actor }}"
        thread-id: "1226941088137478236"


  # This job was causing issues as it is trying to connect to
  # an ITAS runner but it seems all runners are down. 
  # Deploy to the WMD server, make sure it is working correctly
  # deploy:
  #   name: Deploy to ITAS WMD server
  #   runs-on: self-hosted
  #   needs:
  #     - semgrep
  #     - snyk
  #   # This line will override the stopping on failure, 
  #   # this is done so later parts of the workflow can be 
  #   # tested without changing the core of how this repo works.
  #   if: always()
  #
  #   steps:
  #     - name: Copy source code files
  #       uses: actions/checkout@master
  #     - name: Test files are visibile
  #       run: |
  #         whoami
  #         ls
  #         docker compose up -d


  # Run the end to end test files
  e2e-test:
    name: Node.js
    runs-on: ubuntu-latest
    needs:
      - semgrep
      - snyk
    # This line will override the stopping on failure, 
    # this is done so later parts of the workflow can be 
    # tested without changing the core of how this repo works.
    if: always()

    strategy:
      fail-fast: false
      matrix:
        node-version:
          - 10.x
          - 12.x
          - 14.x
    steps:
      - name: 'Checkout https://github.com/${{ github.repository }}@${{ github.ref }}'
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: 'Set up Node.js ${{ matrix.node-version }}'
        uses: actions/setup-node@v1
        with:
          node-version: '${{ matrix.node-version }}'
      - name: Use cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ~/.cache
          key: >-
            ${{ runner.os }}-node${{ matrix.node-version }}-E2E-${{
            hashFiles('package-lock.json') }}
      - name: Install dependencies
        run: |
          npm ci
          npm run cy:verify
      - name: Start MongoDB
        run: >
          docker run -d -p 27017:27017 mongo:4.0

          timeout 60s bash -c 'until nc -z -w 2 localhost 27017 && echo MongoDB
          ready; do sleep 2; done'
      - name: Run E2E test suite
        id: test-suite
        run: |
          NODE_ENV=test npm start -- --silent &
          npm run test:ci -- --config video=true
      - name: Prepare cypress artifacts
        if: failure() && (steps.test-suite.outcome == 'failure')
        working-directory: ./test/e2e
        run: >
          mkdir -p "screenshots" && find "screenshots" -mindepth 1 -maxdepth 1
          -type d -exec sh -c 'mv -- "videos/$(basename "$1").mp4" "$1"' _ {} \;
      - name: Upload cypress artifacts
        if: failure() && (steps.test-suite.outcome == 'failure')
        uses: actions/upload-artifact@v2
        with:
          name: 'cypress-artifacts-node${{ matrix.node-version }}'
          path: test/e2e/screenshots

  # Post a message to the ITAS Discord channel with pipeline updates.
  discord-e2e:
    runs-on: ubuntu-latest
    needs: e2e-test
    # Make sure this runs after to document the jobs completion
    if: always()

    steps:
    - name: Discord Notification start
      uses: tsickert/discord-webhook@v5.3.0
      with:
        webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
        username: GIR ${{github.repository}}
        avatar-url: https://static.wikia.nocookie.net/zimwiki/images/4/4f/Duty_duty_duty_duty_duuuu.png/
        embed-title: "End to end test complete for \"${{github.event.head_commit.message}}\""
        embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        embed-description: |
          Job was ${{ needs.e2e-test.result == 'failure' && 'not' || '' }} completed successfully. ${{needs.e2e-test.result}}
          [Action details ${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
        embed-author-name: "${{ github.triggering_actor }}"
        thread-id: "1226941088137478236"


  # Upload to Dockerhub after tests are finished
  build:
    runs-on: ubuntu-latest
    needs:
      - e2e-test
      # - deploy
    # This line will override the stopping on failure, 
    # this is done so later parts of the workflow can be 
    # tested without changing the core of how this repo works.
    if: always()

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: khaim0919
          password: '${{ secrets.DOCKER_PASSWORD }}'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: 'khaim0919/itas-276-assignment01:latest'

  # Post a message to the ITAS Discord channel with pipeline updates.
  discord-build:
    runs-on: ubuntu-latest
    needs: build
    # Make sure this runs after to document the jobs completion
    if: always()

    steps:
    - name: Discord Notification start
      uses: tsickert/discord-webhook@v5.3.0
      with:
        webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
        username: GIR ${{github.repository}}
        avatar-url: https://static.wikia.nocookie.net/zimwiki/images/4/4f/Duty_duty_duty_duty_duuuu.png/
        embed-title: "Build complete for \"${{github.event.head_commit.message}}\"... Cleaning up"
        embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        embed-description: |
          Job was ${{ job.status == 'failed' && 'not' || '' }} completed successfully.
          [Action details ${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
        embed-author-name: "${{ github.triggering_actor }}"
        thread-id: "1226941088137478236"


  # Post a message to the ITAS Discord channel with pipeline updates.
  discord-end:
    runs-on: ubuntu-latest
    needs:
      - build
      - discord-build
    # This line will override the stopping on failure, 
    # this is done so later parts of the workflow can be 
    # tested without changing the core of how this repo works.
    if: always()
    
    steps:
    - name: Discord Notification End
      uses: tsickert/discord-webhook@v5.3.0
      with:
        webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
        username: GIR ${{github.repository}}
        avatar-url: https://static.wikia.nocookie.net/zimwiki/images/4/4f/Duty_duty_duty_duty_duuuu.png/
        embed-title: "Finished Security Pipeline jobs for \"${{github.event.head_commit.message}}\""
        embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        embed-description: "[Action details ${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})\n"
        embed-author-name: "${{ github.triggering_actor }}"
        thread-id: "1226941088137478236"